version: '2'
services:
  ansible-api:
    restart: always
    image: ansible-api:test
    environment:
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_DATABASE: md-admin
      MYSQL_PASSWD: insur132
      MYSQL_PORT: 3306
      MYSQL_CHARSET: utf8mb4
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWD: 123456
    ports:
      - 8088:80
    volumes:
      - $PWD/logs:/logs
      - /etc/localtime:/etc/localtime
      - $PWD/script:/script
      - /Users/houchaoyue/Documents/zhongdianhuitong/ansible-worker-service:/ansible
      - $PWD/playbook:/playbook
    links:
      - redis
      - db

  mission:
    restart: always
    image: mission-worker:test
    environment:
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_DATABASE: md-admin
      MYSQL_PASSWD: insur132
      MYSQL_PORT: 3306
      MYSQL_CHARSET: utf8mb4
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWD: 123456
      ANSIBLE_API: ansible-api:80
    volumes:
      - $PWD/logs:/logs
      - /etc/localtime:/etc/localtime
      - /Users/houchaoyue/Documents/zhongdianhuitong/ansible-worker-service:/converter
    ports:
      - 5555:5555
    links:
      - redis
      - ansible-api
      - db

  redis:
    restart: always
    image: redis:alpine
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: insur132
    volumes:
      - '/Users/houchaoyue/docker-project/mysql/mysql-data/lib:/var/lib/mysql'
      - '/Users/houchaoyue/docker-project/mysql/mysql-data/conf/mysqld.cnf:/etc/mysql/mysql.conf.d/mysql.cnf'
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

